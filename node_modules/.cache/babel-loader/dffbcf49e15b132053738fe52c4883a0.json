{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\17908\\\\Desktop\\\\todolist\\\\src\\\\components\\\\todolist.js\";\nimport React, { PureComponent, createRef } from 'react';\nexport default class todolist extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [{\n        title: \"学习\",\n        finish: false\n      }, {\n        title: \"吃饭\",\n        finish: true\n      }, {\n        title: \"喝水\",\n        finish: true\n      }]\n    };\n    this.inputToDo = /*#__PURE__*/createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [\"ToDoList\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: this.inputToDo,\n          onKeyUp: e => {\n            this.addToDo(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u5DF2\\u5B8C\\u6210\\u4E8B\\u9879\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.list.map((value, index) => {\n          if (value.finish) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this), value.title, /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"\\u5220\\u9664\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u672A\\u5B8C\\u6210\\u4E8B\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  addToDo(e) {\n    if (e.keyCode === 13) {\n      let newList = this.state.list;\n      newList.push({\n        title: this.inputToDo.current.value,\n        finish: false\n      });\n      this.setState({\n        list: newList\n      });\n      this.inputToDo.current.value = \"\";\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/17908/Desktop/todolist/src/components/todolist.js"],"names":["React","PureComponent","createRef","todolist","constructor","props","state","list","title","finish","inputToDo","render","e","addToDo","map","value","index","keyCode","newList","push","current","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,eAAe,MAAMC,QAAN,SAAuBF,aAAvB,CAAqC;AAChDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CACF;AACIC,QAAAA,KAAK,EAAE,IADX;AAEIC,QAAAA,MAAM,EAAE;AAFZ,OADE,EAKF;AACID,QAAAA,KAAK,EAAE,IADX;AAEIC,QAAAA,MAAM,EAAE;AAFZ,OALE,EASF;AACID,QAAAA,KAAK,EAAE,IADX;AAEIC,QAAAA,MAAM,EAAE;AAFZ,OATE;AADG,KAAb;AAgBA,SAAKC,SAAL,gBAAiBR,SAAS,EAA1B;AACH;;AACDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,4CAAgB;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAE,KAAKD,SAA7B;AAAwC,UAAA,OAAO,EAAEE,CAAC,IAAI;AAAE,iBAAKC,OAAL,CAAaD,CAAb;AAAiB;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBACK,KAAKN,KAAL,CAAWC,IAAX,CAAgBO,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnC,cAAID,KAAK,CAACN,MAAV,EAAkB;AACd,gCACI;AAAA,sCACI;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEaM,KAAK,CAACP,KAFnB,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA,eAASQ,KAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH;AACJ,SAVA;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmBI;AAAA,+BACI;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH;;AACDH,EAAAA,OAAO,CAACD,CAAD,EAAI;AACP,QAAIA,CAAC,CAACK,OAAF,KAAc,EAAlB,EAAsB;AAClB,UAAIC,OAAO,GAAG,KAAKZ,KAAL,CAAWC,IAAzB;AACAW,MAAAA,OAAO,CAACC,IAAR,CACI;AACIX,QAAAA,KAAK,EAAE,KAAKE,SAAL,CAAeU,OAAf,CAAuBL,KADlC;AAEIN,QAAAA,MAAM,EAAE;AAFZ,OADJ;AAMA,WAAKY,QAAL,CAAc;AACVd,QAAAA,IAAI,EAAEW;AADI,OAAd;AAGA,WAAKR,SAAL,CAAeU,OAAf,CAAuBL,KAAvB,GAA+B,EAA/B;AACH;AACJ;;AAhE+C","sourcesContent":["import React, { PureComponent, createRef } from 'react'\r\n\r\nexport default class todolist extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            list: [\r\n                {\r\n                    title: \"学习\",\r\n                    finish: false,\r\n                },\r\n                {\r\n                    title: \"吃饭\",\r\n                    finish: true,\r\n                },\r\n                {\r\n                    title: \"喝水\",\r\n                    finish: true,\r\n                }\r\n            ]\r\n        }\r\n        this.inputToDo = createRef();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>ToDoList<input type=\"text\" ref={this.inputToDo} onKeyUp={e => { this.addToDo(e) }}></input></header>\r\n                <h2>已完成事项</h2>\r\n                <hr />\r\n                <ul>\r\n                    {this.state.list.map((value, index) => {\r\n                        if (value.finish) {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <input type=\"checkbox\" >\r\n                                    </input>{value.title}\r\n                                    <button>删除</button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    })}\r\n                </ul>\r\n                <h2>未完成事件</h2>\r\n                <hr />\r\n                <ul>\r\n                    <li>\r\n                        <input type=\"checkbox\"></input><button>删除</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    addToDo(e) {\r\n        if (e.keyCode === 13) {\r\n            let newList = this.state.list;\r\n            newList.push(\r\n                {\r\n                    title: this.inputToDo.current.value,\r\n                    finish: false\r\n                }\r\n            );\r\n            this.setState({\r\n                list: newList,\r\n            });\r\n            this.inputToDo.current.value = \"\";\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}